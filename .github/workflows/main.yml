name: build

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false

      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11-dev"]
        qt-lib: [pyqt5, pyqt6, pyside2, pyside6]
        os: [ubuntu-20.04, windows-latest, macos-latest]
        include:
          - python-version: "3.7"
            tox-env: "py37"
          - python-version: "3.8"
            tox-env: "py38"
          - python-version: "3.9"
            tox-env: "py39"
          - python-version: "3.10"
            tox-env: "py310"
          - python-version: "3.11-dev"
            tox-env: "py311"
        # https://bugreports.qt.io/browse/PYSIDE-1797
        exclude:
          - qt-lib: pyside6
            os: macos-latest
            python-version: "3.7"
          - qt-lib: pyside6
            os: ubuntu-20.04
            python-version: "3.7"
          # Not installable so far
          - qt-lib: pyside6
            python-version: "3.11-dev"
          - qt-lib: pyside2
            os: windows-latest
            python-version: "3.11-dev"

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox
        if [ "${{ matrix.os }}" == "ubuntu-20.04" ]; then
          sudo apt-get update -y
          sudo apt-get install -y libgles2-mesa-dev
        fi
      shell: bash
    - name: Test with tox
      run: |
        tox -e ${{ matrix.tox-env }}-${{ matrix.qt-lib }} -- -ra --color=yes

  checks:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.7"
    - name: Install tox
      run: |
        python -m pip install --upgrade pip
        pip install tox
    - name: Linting
      run: |
        tox -e linting
    - name: Docs
      run: |
        tox -e docs

  deploy:

    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

    runs-on: ubuntu-latest

    needs: [build, checks]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.7"
    - name: Build package
      run: |
        python -m pip install --upgrade pip setuptools
        pip install wheel
        python setup.py sdist bdist_wheel
    - name: Publish package to PyPI
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@v1.5.0
      with:
        user: __token__
        password: ${{ secrets.pypi_token }}
